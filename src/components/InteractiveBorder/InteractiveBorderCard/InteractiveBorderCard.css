/* components/InteractiveBorder/InteractiveBorderCard/InteractiveBorderCard.css */
.interactive-border-card {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    max-width: none;
    perspective: 1000px;
    transform-style: preserve-3d;
}

.interactive-border-card-outer {
    display: flex;
    justify-content: center;
    align-items: center;
    background: var(--white);
    /* ИСПРАВЛЕНО: Упрощаем border-radius для iOS */
    border-radius: calc(var(--border-radius) * var(--scale-factor, 1));
    box-shadow: var(--shadow-card);
    width: 100%;
    aspect-ratio: 3/4.4; /* Базовые пропорции */

    /* ИСПРАВЛЕНО: Добавляем overflow hidden для предотвращения выхода за границы */
    overflow: hidden;

    /* ИСПРАВЛЕНО: Явно задаем box-sizing */
    box-sizing: border-box;

    /* Настройки для 3D трансформации */
    transform-style: preserve-3d;
    transition: transform 0.6s ease-in-out;
    transform: rotateY(0deg);

    /* ИСПРАВЛЕНО: Добавляем position relative */
    position: relative;
}

/* Различные этапы анимации переворачивания */
.card-flip-step-1 .interactive-border-card-outer {
    transform: scale(1.1);
    transition: transform 0.6s ease-in-out;
    border: calc(2px * var(--scale-factor, 1)) solid yellow !important;
    box-shadow: 0 calc(10px * var(--scale-factor, 1)) calc(20px * var(--scale-factor, 1)) rgba(255, 255, 0, 0.3) !important;
}

.card-flip-step-2 .interactive-border-card-outer {
    transform: rotateY(45deg) scale(1.15);
    transition: transform 0.6s ease-in-out;
    border: calc(3px * var(--scale-factor, 1)) solid orange !important;
    box-shadow: 0 calc(15px * var(--scale-factor, 1)) calc(25px * var(--scale-factor, 1)) rgba(255, 165, 0, 0.4) !important;
}

.card-flip-step-3 .interactive-border-card-outer {
    transform: rotateY(90deg) scale(1.2);
    transition: transform 0.6s ease-in-out;
    border: calc(4px * var(--scale-factor, 1)) solid red !important;
    box-shadow: 0 calc(20px * var(--scale-factor, 1)) calc(40px * var(--scale-factor, 1)) rgba(255, 0, 0, 0.5) !important;
}

.card-flip-step-4 .interactive-border-card-outer {
    transform: rotateY(135deg) scale(1.15);
    transition: transform 0.6s ease-in-out;
    border: calc(3px * var(--scale-factor, 1)) solid purple !important;
    box-shadow: 0 calc(15px * var(--scale-factor, 1)) calc(25px * var(--scale-factor, 1)) rgba(128, 0, 128, 0.4) !important;
}

.card-flip-step-5 .interactive-border-card-outer {
    transform: rotateY(180deg) scale(1.1);
    transition: transform 0.6s ease-in-out;
    border: calc(2px * var(--scale-factor, 1)) solid green !important;
    box-shadow: 0 calc(10px * var(--scale-factor, 1)) calc(20px * var(--scale-factor, 1)) rgba(0, 128, 0, 0.3) !important;
}

.interactive-border-card-inner {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: var(--shadow-inner);
    border-radius: calc(calc(var(--border-radius) * 0.5) * var(--scale-factor, 1));

    /* ИСПРАВЛЕНО: Явно задаем box-sizing */
    box-sizing: border-box;

    transition: all 0.3s ease;
    backface-visibility: hidden;

    /* ИСПРАВЛЕНО: Добавляем overflow hidden и для внутреннего контейнера */
    overflow: hidden;

    /* ИСПРАВЛЕНО: Убираем возможные margin/padding */
    margin: 0;
    padding: 0;
}

.card-back-inner {
    background: var(--gradient-blue);
    position: relative;
    overflow: hidden;
}

/* Узор на рубашке */
.card-back-pattern {
    width: 100%;
    height: 100%;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    /* ИСПРАВЛЕНО: Добавляем overflow hidden */
    overflow: hidden;
}

/* Создаем красивый узор CSS */
.card-back-pattern::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-size: calc(12px * var(--scale-factor, 1)) calc(12px * var(--scale-factor, 1));
    background:
            linear-gradient(45deg, var(--primary-blue-dark) 25%, transparent 25%),
            linear-gradient(-45deg, var(--primary-blue-dark) 25%, transparent 25%),
            linear-gradient(45deg, transparent 75%, var(--primary-blue-dark) 75%),
            linear-gradient(-45deg, transparent 75%, var(--primary-blue-dark) 75%);
    background-position: 0 0,
    calc(6px * var(--scale-factor, 1)) 0,
    calc(6px * var(--scale-factor, 1)) calc(-6px * var(--scale-factor, 1)),
    0px calc(6px * var(--scale-factor, 1));
    opacity: 0.6;
}

/* Добавляем символ в центр */
.card-back-pattern::after {
    content: '?';
    font-family: var(--font-family);
    font-size: calc(1.8rem * var(--scale-factor, 1));
    font-weight: var(--font-weight-bold);
    color: var(--white);
    text-shadow: calc(2px * var(--scale-factor, 1)) calc(2px * var(--scale-factor, 1)) calc(4px * var(--scale-factor, 1)) rgba(0, 0, 0, 0.5);
    z-index: 1;
    position: relative;
}

/* Градиенты из глобальных переменных */
.gradient-blue {
    background: var(--gradient-blue);
}

.gradient-red {
    background: var(--gradient-red);
}

.gradient-orange {
    background: var(--gradient-orange);
}

.gradient-none {
    background: var(--white);
}

/* ИСПРАВЛЕНО: Упрощаем размеры иконки для лучшей совместимости с iOS */
.card-icon {
    width: 68%;
    height: auto;
    max-width: 68%;
    max-height: 68%;
    object-fit: contain;
    /* ИСПРАВЛЕНО: Добавляем explicit sizing */
    box-sizing: border-box;
    display: block;
}

/* Эффекты для кликабельных карт */
.interactive-border-card:hover .interactive-border-card-outer {
    transform: translateY(calc(-2px * var(--scale-factor, 1)));
    box-shadow: 0 calc(8px * var(--scale-factor, 1)) calc(20px * var(--scale-factor, 1)) rgba(0, 0, 0, 0.15);
}

/* Состояние выбранной карты */
.card-selected .interactive-border-card-outer {
    transform: scale(0.95);
    opacity: 0.7;
}

/* Анимация появления */
.card-appear .interactive-border-card-outer {
    animation: cardSlideIn 0.6s ease-out;
}

/* Анимация переворачивания */
.card-flip .interactive-border-card-outer {
    animation: card3DFlip 0.8s ease-in-out;
}

/* Анимации */
@keyframes cardSlideIn {
    0% {
        transform: translateY(calc(-50px * var(--scale-factor, 1))) scale(0.8);
        opacity: 0;
    }
    50% {
        transform: translateY(calc(-10px * var(--scale-factor, 1))) scale(1.05);
        opacity: 0.8;
    }
    100% {
        transform: translateY(0) scale(1);
        opacity: 1;
    }
}

@keyframes card3DFlip {
    0% {
        transform: rotateY(0deg);
    }
    50% {
        transform: rotateY(90deg) scale(1.1);
    }
    100% {
        transform: rotateY(0deg);
    }
}

/* СПЕЦИАЛЬНЫЕ ПРАВИЛА ДЛЯ КАРТ В БИТВЕ */

/* ========== КАРТЫ ИГРОКОВ (внизу) ========== */
.battle-control .interactive-border-card-outer {
    max-height: calc(11.5rem * var(--scale-factor, 1));
    aspect-ratio: 3/4.8;
}

.battle-control .card-icon {
    width: 68%;
    max-width: 68%;
    max-height: 68%;
}

.battle-control .card-back-pattern::after {
    font-size: calc(1.8rem * var(--scale-factor, 1));
}

/* ========== КАРТЫ ПРОТИВНИКА (сверху) ========== */
.battle-enemy-card .interactive-border-card-outer {
    max-height: calc(11rem * var(--scale-factor, 1));
    aspect-ratio: 3/4.4;
}

.battle-enemy-card .card-icon {
    width: 68%;
    max-width: 68%;
    max-height: 68%;
}

.battle-enemy-card .card-back-pattern::after {
    font-size: calc(1.8rem * var(--scale-factor, 1));
}

/* ========== ЦЕНТРАЛЬНЫЕ КАРТЫ (на столе) ========== */
.battle-center .interactive-border-card-outer {
    max-height: calc(14rem * var(--scale-factor, 1));
    aspect-ratio: 3/5;
}

.battle-center .card-icon {
    width: 68%;
    max-width: 68%;
    max-height: 68%;
}

.battle-center .card-back-pattern::after {
    font-size: calc(2.5rem * var(--scale-factor, 1));
}

/* СПЕЦИАЛЬНЫЙ медиа-запрос для iPhone 8 и подобных (около 667px) */
@media screen and (max-height: 700px) and (min-height: 600px) {
    /* ========== КАРТЫ ИГРОКОВ ========== */
    .battle-control .interactive-border-card-outer {
        max-height: calc(11rem * var(--scale-factor, 1));
        aspect-ratio: 3/4.6;
    }
    .battle-control .card-back-pattern::after {
        font-size: calc(1.7rem * var(--scale-factor, 1));
    }

    /* ========== КАРТЫ ПРОТИВНИКА ========== */
    .battle-enemy-card .interactive-border-card-outer {
        max-height: calc(8rem * var(--scale-factor, 1));
        aspect-ratio: 3/4.6;
    }
    .battle-enemy-card .card-back-pattern::after {
        font-size: calc(1.5rem * var(--scale-factor, 1));
    }

    /* ========== ЦЕНТРАЛЬНЫЕ КАРТЫ ========== */
    .battle-center .interactive-border-card-outer {
        max-height: calc(10rem * var(--scale-factor, 1));
        aspect-ratio: 3/4;
    }
    .battle-center .card-back-pattern::after {
        font-size: calc(2.1rem * var(--scale-factor, 1));
    }
}

/* Для экранов с малой высотой - ПЛАВНОЕ пропорциональное уменьшение */
@media screen and (max-height: 635px) {
    /* ========== КАРТЫ ИГРОКОВ ========== */
    .battle-control .interactive-border-card-outer {
        max-height: calc(12rem * var(--scale-factor, 1));
        aspect-ratio: 3/4.5;
    }
    .battle-control .card-back-pattern::after {
        font-size: calc(1.6rem * var(--scale-factor, 1));
    }

    /* ========== КАРТЫ ПРОТИВНИКА ========== */
    .battle-enemy-card .interactive-border-card-outer {
        max-height: calc(9rem * var(--scale-factor, 1));
        aspect-ratio: 3/4.6;
    }
    .battle-enemy-card .card-back-pattern::after {
        font-size: calc(1.6rem * var(--scale-factor, 1));
    }

    /* ========== ЦЕНТРАЛЬНЫЕ КАРТЫ ========== */
    .battle-center .interactive-border-card-outer {
        max-height: calc(12rem * var(--scale-factor, 1));
        aspect-ratio: 3/4.4;
    }
    .battle-center .card-back-pattern::after {
        font-size: calc(2rem * var(--scale-factor, 1));
    }
}

@media screen and (max-height: 500px) {
    /* ========== КАРТЫ ИГРОКОВ ========== */
    .battle-control .interactive-border-card-outer {
        max-height: calc(12rem * var(--scale-factor, 1));
        aspect-ratio: 3/4.8;
    }
    .battle-control .card-back-pattern::after {
        font-size: calc(1.4rem * var(--scale-factor, 1));
    }

    /* ========== КАРТЫ ПРОТИВНИКА ========== */
    .battle-enemy-card .interactive-border-card-outer {
        max-height: calc(9rem * var(--scale-factor, 1));
        aspect-ratio: 3/4.4;
    }
    .battle-enemy-card .card-back-pattern::after {
        font-size: calc(1.4rem * var(--scale-factor, 1));
    }

    /* ========== ЦЕНТРАЛЬНЫЕ КАРТЫ ========== */
    .battle-center .interactive-border-card-outer {
        max-height: calc(11.5rem * var(--scale-factor, 1));
        aspect-ratio: 3/4.4;
    }
    .battle-center .card-back-pattern::after {
        font-size: calc(1.8rem * var(--scale-factor, 1));
    }
}

@media screen and (max-height: 400px) {
    /* ========== КАРТЫ ИГРОКОВ ========== */
    .battle-control .interactive-border-card-outer {
        max-height: calc(14.5rem * var(--scale-factor, 1));
        aspect-ratio: 3/4.6;
    }
    .battle-control .card-back-pattern::after {
        font-size: calc(1.2rem * var(--scale-factor, 1));
    }

    /* ========== КАРТЫ ПРОТИВНИКА ========== */
    .battle-enemy-card .interactive-border-card-outer {
        max-height: calc(11rem * var(--scale-factor, 1));
        aspect-ratio: 3/4.2;
    }
    .battle-enemy-card .card-back-pattern::after {
        font-size: calc(1.2rem * var(--scale-factor, 1));
    }

    /* ========== ЦЕНТРАЛЬНЫЕ КАРТЫ ========== */
    .battle-center .interactive-border-card-outer {
        max-height: calc(15rem * var(--scale-factor, 1));
        aspect-ratio: 3/4.2;
    }
    .battle-center .card-back-pattern::after {
        font-size: calc(1.5rem * var(--scale-factor, 1));
    }
}

/* ИСПРАВЛЕННЫЕ АДАПТИВНЫЕ РАЗМЕРЫ - менее агрессивные */

/* Для больших экранов - нормальные размеры */
@media (min-width: 768px) {
    .interactive-border-card {
        min-width: calc(7rem * var(--scale-factor, 1));
    }
}

@media (min-width: 1200px) {
    .interactive-border-card {
        min-width: calc(9rem * var(--scale-factor, 1));
    }
}

@media (min-width: 1600px) {
    .interactive-border-card {
        max-width: calc(16rem * var(--scale-factor, 1));
    }
}

/* ТОЛЬКО для действительно маленьких экранов по высоте */
@media screen and (max-height: 500px) {
    .interactive-border-card-outer {
        aspect-ratio: 3/3.8; /* Немного более компактные */
    }

    .card-back-pattern::after {
        font-size: calc(1.4rem * var(--scale-factor, 1));
    }

    .card-back-pattern::before {
        background-size: calc(10px * var(--scale-factor, 1)) calc(10px * var(--scale-factor, 1));
        background-position: 0 0,
        calc(5px * var(--scale-factor, 1)) 0,
        calc(5px * var(--scale-factor, 1)) calc(-5px * var(--scale-factor, 1)),
        0px calc(5px * var(--scale-factor, 1));
    }
}

/* ТОЛЬКО для очень маленьких экранов по высоте */
@media screen and (max-height: 400px) {
    .interactive-border-card-outer {
        aspect-ratio: 3/3.5; /* Более компактные */
    }

    .card-back-pattern::after {
        font-size: calc(1.2rem * var(--scale-factor, 1));
    }

    .card-back-pattern::before {
        background-size: calc(8px * var(--scale-factor, 1)) calc(8px * var(--scale-factor, 1));
        background-position: 0 0,
        calc(4px * var(--scale-factor, 1)) 0,
        calc(4px * var(--scale-factor, 1)) calc(-4px * var(--scale-factor, 1)),
        0px calc(4px * var(--scale-factor, 1));
    }
}

/* ТОЛЬКО для экстремально маленьких экранов по ширине */
@media screen and (max-width: 320px) {
    .interactive-border-card {
        min-width: calc(2.8rem * var(--scale-factor, 1));
        max-width: calc(4.5rem * var(--scale-factor, 1));
    }

    .card-icon {
        width: calc(70% * var(--scale-factor, 1));
        max-width: 70%;
        max-height: 70%;
    }
}

@media screen and (max-width: 300px) {
    .interactive-border-card {
        min-width: calc(2.2rem * var(--scale-factor, 1));
        max-width: calc(3.5rem * var(--scale-factor, 1));
    }

    .interactive-border-card-outer {
        aspect-ratio: 1/1; /* Квадратные только для экстремально маленьких */
    }

    .card-icon {
        width: calc(68% * var(--scale-factor, 1));
        max-width: 68%;
        max-height: 68%;
    }

    .card-back-pattern::after {
        font-size: calc(0.8rem * var(--scale-factor, 1));
    }
}

/* ИСПРАВЛЕНО: Добавляем специальные правила для iOS Safari */
@supports (-webkit-touch-callout: none) {
    .interactive-border-card-outer {
        /* Принудительное hardware acceleration для iOS */
        -webkit-transform: translateZ(0);
        transform: translateZ(0);
        /* Улучшаем рендеринг на iOS */
        -webkit-backface-visibility: hidden;
        backface-visibility: hidden;
        /* Отключаем сглаживание на iOS если нужно */
        -webkit-font-smoothing: antialiased;
        /* ИСПРАВЛЕНО: Принудительно устанавливаем overflow */
        overflow: hidden !important;
    }

    .interactive-border-card-inner {
        -webkit-transform: translateZ(0);
        transform: translateZ(0);
        -webkit-backface-visibility: hidden;
        backface-visibility: hidden;
        /* ИСПРАВЛЕНО: Используем более точные отступы для iOS */
        top: 10% !important;
        left: 10% !important;
        right: 10% !important;
        bottom: 10% !important;
        overflow: hidden !important;
    }

    /* ИСПРАВЛЕНО: Принудительно устанавливаем размеры иконок для iOS */
    .card-icon {
        width: 65% !important;
        height: auto !important;
        max-width: 65% !important;
        max-height: 65% !important;
    }

    /* ИСПРАВЛЕНО: Специальные правила для background pattern на iOS */
    .card-back-pattern::before {
        -webkit-transform: translateZ(0);
        transform: translateZ(0);
    }
}

/* ИСПРАВЛЕНО: Дополнительные правила для WebKit браузеров */
@media screen and (-webkit-min-device-pixel-ratio: 0) {
    .interactive-border-card-outer {
        /* Исправляем рендеринг на Retina дисплеях */
        -webkit-backface-visibility: hidden;
        backface-visibility: hidden;
    }

    .interactive-border-card-inner {
        /* Убираем возможные артефакты рендеринга */
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
    }
}

/* ИСПРАВЛЕНО: Fallback для браузеров без поддержки @supports */
.interactive-border-card-inner {
    /* Fallback размеры если абсолютное позиционирование не сработает */
    width: 78%;
    height: 82%;
}

/* Применяем абсолютное позиционирование только если браузер поддерживает @supports */
@supports (position: absolute) {
    .interactive-border-card-inner {
        width: auto;
        height: auto;
        position: absolute;
        top: 11%;
        left: 11%;
        right: 11%;
        bottom: 11%;
    }
}